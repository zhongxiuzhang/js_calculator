{"version":3,"sources":["index.js"],"names":["JSCalculator","props","state","formula","result","prevFormula","deciMode","deciNum","this","setState","input","newNum","Math","round","toString","operSet","Set","consOper","consOperM","length","has","charAt","substring","handleEqual","finalRes","eval","id","onClick","handleClear","handleOperation","handleNumberInput","handleDecimal","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dbf6f8b6.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nclass JSCalculator extends React.Component{\n    constructor(props){\n      super(props);\n      this.state = {\n        formula: <span>&nbsp;</span>,\n        result: 0,\n        prevFormula: '',\n        deciMode: false,\n        deciNum:0\n      }\n    }\n    handleClear(){\n      this.setState({formula: <span>&nbsp;</span>, result:0, prevFormula:'', deciMode:false, deciNum:0});\n    }\n    handleDecimal(){\n      if (!this.state.deciMode){\n        this.setState({deciMode:true, deciNum:1});\n      }\n    }\n    handleNumberInput(input){\n      if(typeof(this.state.result) === 'number'){\n        let newNum;\n        if(this.state.deciMode){\n          newNum = this.state.result + input/(10**this.state.deciNum);\n          newNum = Math.round(newNum*(10**this.state.deciNum))/(10**this.state.deciNum);\n          this.setState({deciNum:this.state.deciNum+1});\n        }else{\n          newNum = this.state.result*10 + input;\n        }\n        this.setState({formula: this.state.prevFormula + (newNum).toString(),result: newNum});\n      }else{\n        this.setState({formula: this.state.prevFormula + (input).toString(), result:input});\n      }\n    }\n    handleOperation(input){\n      let operSet = new Set(['/','*','+','-']);\n      let consOper = false;\n      let consOperM = false;\n      if(this.state.prevFormula.length > 0 && operSet.has(this.state.prevFormula.charAt(this.state.prevFormula.length-1)) && (operSet.has(this.state.result))) {\n        consOper = true;\n        if(this.state.prevFormula.charAt(this.state.prevFormula.length-1)!=='-' && input==='-') consOperM = true;\n      }\n      if(consOper) {\n        if(consOperM){\n          this.setState({formula:this.state.prevFormula+input, prevFormula:this.state.prevFormula+input});\n        }else{\n          this.setState({formula:this.state.prevFormula.substring(0,this.state.prevFormula.length-1)+input, prevFormula:this.state.prevFormula.substring(0,this.state.prevFormula.length-1)+input});\n        }\n      }else{\n        this.setState({formula:this.state.prevFormula+this.state.result+input, prevFormula:this.state.prevFormula+this.state.result+input});\n      }\n      this.setState({result: input});\n  }\n    handleEqual(){\n      let finalRes = eval(this.state.formula);\n      finalRes = Math.round(finalRes*(10**4))/(10**4);\n      this.setState({formula:this.state.formula+'='+finalRes.toString(), result:finalRes, prevFormula:'', deciMode:false, deciNum:0});\n    }\n    render(){\n      return(\n        <div id=\"calculator\">\n          <h1>JS Calculator</h1>\n          <div id=\"calculator-box\">\n            <div id=\"display\">\n              <div id=\"display-formula\">{this.state.formula}</div>\n              <div id=\"display-result\">{this.state.result}</div>\n            </div>\n            <div id=\"input-panel\">\n              <button id=\"clear\" onClick={()=>this.handleClear()}>AC</button>\n              <button id=\"divide\" onClick={()=>this.handleOperation(\"/\")}>/</button>\n              <button id=\"multiply\" onClick={()=>this.handleOperation(\"*\")}>X</button>\n              <button id=\"seven\" onClick={()=>this.handleNumberInput(7)}>7</button>\n              <button id=\"eight\" onClick={()=>this.handleNumberInput(8)}>8</button>\n              <button id=\"nine\" onClick={()=>this.handleNumberInput(9)}>9</button>\n              <button id=\"subtract\" onClick={()=>this.handleOperation(\"-\")}>-</button>\n              <button id=\"four\" onClick={()=>this.handleNumberInput(4)}>4</button>\n              <button id=\"five\" onClick={()=>this.handleNumberInput(5)}>5</button>\n              <button id=\"six\" onClick={()=>this.handleNumberInput(6)}>6</button>\n              <button id=\"add\" onClick={()=>this.handleOperation(\"+\")}>+</button>\n              <button id=\"one\" onClick={()=>this.handleNumberInput(1)}>1</button>\n              <button id=\"two\" onClick={()=>this.handleNumberInput(2)}>2</button>\n              <button id=\"three\" onClick={()=>this.handleNumberInput(3)}>3</button>\n              <button id=\"equals\" onClick={()=>this.handleEqual()}>=</button>\n              <button id=\"zero\" onClick={()=>this.handleNumberInput(0)}>0</button>\n              <button id=\"decimal\" onClick={()=>this.handleDecimal()}>.</button>\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }\n  \n  ReactDOM.render(\n    <JSCalculator />,\n    document.getElementById('root')\n  );"],"sourceRoot":""}